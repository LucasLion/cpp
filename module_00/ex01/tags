!_TAG_EXTRA_DESCRIPTION	anonymous	/Include tags for non-named objects like lambda/
!_TAG_EXTRA_DESCRIPTION	fileScope	/Include tags of file scope/
!_TAG_EXTRA_DESCRIPTION	pseudo	/Include pseudo tags/
!_TAG_EXTRA_DESCRIPTION	subparser	/Include tags generated by subparsers/
!_TAG_FIELD_DESCRIPTION	epoch	/the last modified time of the input file (only for F\/file kind tag)/
!_TAG_FIELD_DESCRIPTION	file	/File-restricted scoping/
!_TAG_FIELD_DESCRIPTION	input	/input file/
!_TAG_FIELD_DESCRIPTION	name	/tag name/
!_TAG_FIELD_DESCRIPTION	pattern	/pattern/
!_TAG_FIELD_DESCRIPTION	typeref	/Type and name of a variable or typedef/
!_TAG_FIELD_DESCRIPTION!C++	name	/aliased names/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_KIND_DESCRIPTION!C++	c,class	/classes/
!_TAG_KIND_DESCRIPTION!C++	d,macro	/macro definitions/
!_TAG_KIND_DESCRIPTION!C++	e,enumerator	/enumerators (values inside an enumeration)/
!_TAG_KIND_DESCRIPTION!C++	f,function	/function definitions/
!_TAG_KIND_DESCRIPTION!C++	g,enum	/enumeration names/
!_TAG_KIND_DESCRIPTION!C++	h,header	/included header files/
!_TAG_KIND_DESCRIPTION!C++	m,member	/class, struct, and union members/
!_TAG_KIND_DESCRIPTION!C++	n,namespace	/namespaces/
!_TAG_KIND_DESCRIPTION!C++	s,struct	/structure names/
!_TAG_KIND_DESCRIPTION!C++	t,typedef	/typedefs/
!_TAG_KIND_DESCRIPTION!C++	u,union	/union names/
!_TAG_KIND_DESCRIPTION!C++	v,variable	/variable definitions/
!_TAG_KIND_DESCRIPTION!Make	I,makefile	/makefiles/
!_TAG_KIND_DESCRIPTION!Make	m,macro	/macros/
!_TAG_KIND_DESCRIPTION!Make	t,target	/targets/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_OUTPUT_VERSION	0.0	/current.age/
!_TAG_PARSER_VERSION!C++	0.0	/current.age/
!_TAG_PARSER_VERSION!Make	0.0	/current.age/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/noil/code/cpp/module_00/ex01/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	6.0.0	/p6.0.20221218.0/
!_TAG_ROLE_DESCRIPTION!C++!header	local	/local header/
!_TAG_ROLE_DESCRIPTION!C++!header	system	/system header/
!_TAG_ROLE_DESCRIPTION!C++!macro	undef	/undefined/
!_TAG_ROLE_DESCRIPTION!Make!makefile	included	/included/
!_TAG_ROLE_DESCRIPTION!Make!makefile	optional	/optionally included/
$(NAME)	Makefile	/^$(NAME): $(OBJ)$/;"	t
CC	Makefile	/^CC   = g++$/;"	m
Contact	include/PhoneBook.hpp	/^class Contact {$/;"	c
Contact	src/Contact.cpp	/^Contact::Contact(void) {$/;"	f	class:Contact
MAX_CONTACTS	include/PhoneBook.hpp	/^#define MAX_CONTACTS /;"	d
NAME	Makefile	/^NAME = phonebook$/;"	m
OBJ	Makefile	/^OBJ  = $(addprefix obj\/,$(notdir $(SRC:.cpp=.o)))$/;"	m
PHONEBOOK_HPP	include/PhoneBook.hpp	/^# define PHONEBOOK_HPP$/;"	d
PhoneBook	include/PhoneBook.hpp	/^class PhoneBook {$/;"	c
PhoneBook	src/PhoneBook.cpp	/^PhoneBook::PhoneBook(void) {$/;"	f	class:PhoneBook
RM	Makefile	/^RM   = rm -f$/;"	m
SIZE	include/PhoneBook.hpp	/^#define SIZE /;"	d
SRC	Makefile	/^SRC  = src\/PhoneBook.cpp	\\$/;"	m
_contacts	include/PhoneBook.hpp	/^	Contact	_contacts[MAX_CONTACTS];$/;"	m	class:PhoneBook	typeref:typename:Contact[]
_darkestSecret	include/PhoneBook.hpp	/^	std::string	_darkestSecret;$/;"	m	class:Contact	typeref:typename:std::string
_firstName	include/PhoneBook.hpp	/^	std::string	_firstName;$/;"	m	class:Contact	typeref:typename:std::string
_lastName	include/PhoneBook.hpp	/^	std::string	_lastName;$/;"	m	class:Contact	typeref:typename:std::string
_nickName	include/PhoneBook.hpp	/^	std::string	_nickName;$/;"	m	class:Contact	typeref:typename:std::string
_phoneNumber	include/PhoneBook.hpp	/^	std::string	_phoneNumber;$/;"	m	class:Contact	typeref:typename:std::string
addContact	src/PhoneBook.cpp	/^void	PhoneBook::addContact() {$/;"	f	class:PhoneBook	typeref:typename:void
all	Makefile	/^all: $(NAME)$/;"	t
clean	Makefile	/^clean:$/;"	t
debug	Makefile	/^debug: $(OBJ)$/;"	t
displayContact	src/PhoneBook.cpp	/^void	PhoneBook::displayContact(int index) {$/;"	f	class:PhoneBook	typeref:typename:void
displayMenu	src/PhoneBook.cpp	/^void	PhoneBook::displayMenu() {$/;"	f	class:PhoneBook	typeref:typename:void
fclean	Makefile	/^fclean: clean$/;"	t
getDarkestSecret	src/Contact.cpp	/^std::string	Contact::getDarkestSecret(void) {$/;"	f	class:Contact	typeref:typename:std::string
getFirstName	src/Contact.cpp	/^std::string	Contact::getFirstName(void) {$/;"	f	class:Contact	typeref:typename:std::string
getLastName	src/Contact.cpp	/^std::string	Contact::getLastName(void) {$/;"	f	class:Contact	typeref:typename:std::string
getNickName	src/Contact.cpp	/^std::string	Contact::getNickName(void) {$/;"	f	class:Contact	typeref:typename:std::string
getPhoneNumber	src/Contact.cpp	/^std::string	Contact::getPhoneNumber(void) {$/;"	f	class:Contact	typeref:typename:std::string
main	src/main.cpp	/^int main(void)$/;"	f	typeref:typename:int
obj/%.o	Makefile	/^obj\/%.o: src\/%.cpp$/;"	t
re	Makefile	/^re: fclean all$/;"	t
run	Makefile	/^run:$/;"	t
setDarkestSecret	src/Contact.cpp	/^void	Contact::setDarkestSecret() {$/;"	f	class:Contact	typeref:typename:void
setFirstName	src/Contact.cpp	/^void	Contact::setFirstName() {$/;"	f	class:Contact	typeref:typename:void
setLastName	src/Contact.cpp	/^void	Contact::setLastName() {$/;"	f	class:Contact	typeref:typename:void
setNickName	src/Contact.cpp	/^void	Contact::setNickName() {$/;"	f	class:Contact	typeref:typename:void
setPhoneNumber	src/Contact.cpp	/^void	Contact::setPhoneNumber() {$/;"	f	class:Contact	typeref:typename:void
shrink	src/PhoneBook.cpp	/^std::string	PhoneBook::shrink(std::string str) {$/;"	f	class:PhoneBook	typeref:typename:std::string
~Contact	src/Contact.cpp	/^Contact::~Contact(void) {$/;"	f	class:Contact
~PhoneBook	src/PhoneBook.cpp	/^PhoneBook::~PhoneBook(void) {$/;"	f	class:PhoneBook
